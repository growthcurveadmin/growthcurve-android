package com.borstvoeding.growthcurve;

import java.util.ArrayList;
import java.util.List;

import org.achartengine.ChartFactory;
import org.achartengine.chart.PointStyle;
import org.achartengine.model.XYMultipleSeriesDataset;
import org.achartengine.model.XYSeries;
import org.achartengine.renderer.XYMultipleSeriesRenderer;
import org.achartengine.renderer.XYSeriesRenderer;

import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.Typeface;

public class WeightChart {
	private static final int COLOR_IN_RANGE = Color.rgb(193, 255, 193);
	private static final int SECONDS_PER_MONTH_AVG = 2628000;
	private final double[] refXs = new double[] { 0, 638666, 1277331, 1915997,
			2554663, 3193329, 3831994, 4470660, 5109326, 5747991, 6386657,
			7025323, 7663989, 8302654, 8941320, 9579986, 10218651, 10857317,
			11495983, 12134649, 12773314, 13411980, 14050646, 14689311,
			15327977, 15966643, 16605309, 17243974, 17882640, 18521306,
			19159971, 19798637, 20437303, 21075969, 21714634, 22353300,
			22991966, 23630631, 24269297, 24907963, 25546629, 26185294,
			26823960, 27462626, 28101291, 28739957, 29378623, 30017289,
			30655954, 31294620, 31933286, 32571951, 33210617, 33849283,
			34487949, 35126614, 35765280, 36403946, 37042611, 37681277,
			38319943, 38958609, 39597274, 40235940, 40874606, 41513271,
			42151937, 42790603, 43429269, 44067934, 44706600, 45345266,
			45983931, 46622597, 47261263, 47899929, 48538594, 49177260,
			49815926, 50454591, 51093257, 51731923, 52370589, 53009254,
			53647920, 54286586, 54925251, 55563917, 56202583, 56841249,
			57479914, 58118580, 58757246, 59395911, 60034577, 60673243,
			61311909, 61950574, 62589240, 62777083, 63378180, 64016846,
			64655511, 65294177, 65932843, 66571509, 67210174, 67848840,
			68487506, 69126171, 69764837, 70403503, 71042169, 71680834,
			72319500, 72958166, 73596831, 74235497, 74874163, 75512829,
			76151494, 76790160, 77428826, 78067491, 78706157, 79344823,
			79983489, 80622154, 81260820, 81899486, 82538151, 83176817,
			83815483, 84454149, 85092814, 85731480, 86370146, 87008811,
			87647477, 88286143, 88924809, 89563474, 90202140, 90840806,
			91479471, 92118137, 92756803, 93395469, 94034134, 94672800,
			95311466, 95950131, 96588797, 97227463, 97866129, 98504794,
			99143460, 99782126, 100420791, 101059457, 101698123, 102336789,
			102975454, 103614120, 104252786, 104891451, 105530117, 106168783,
			106807449, 107446114, 108084780, 108723446, 109362111, 110000777,
			110639443, 111278109, 111916774, 112555440, 113194106, 113832771,
			114471437, 115110103, 115748769, 116387434, 117026100, 117664766,
			118303431, 118942097, 119580763, 120219429, 120858094, 121496760,
			122135426, 122774091, 123412757, 124051423, 124690089, 125328754,
			125967420, 126606086, 127244751, 127883417, 128522083, 129160749,
			129799414, 130438080, 131076746, 131715411, 132354077, 132992743,
			133631409, 134270074, 134908740, 135547406, 136186071, 136824737,
			137463403, 138102069, 138740734, 139379400, 140018066, 140656731,
			141295397, 141934063, 142572729, 143211394, 143850060, 144488726,
			145127391, 145766057, 146404723, 147043389, 147682054, 148320720,
			148959386, 149598051, 150236717, 150875383, 151514049, 152152714,
			152791380, 153430046, 154068711, 154707377, 155346043, 155984709,
			156623374, 157262040, 157788000 };
	private final double[] refM2 = new double[] { 5010.4, 5270.8, 5645.8,
			6083.3, 6500.0, 6906.3, 7260.4, 7593.8, 7895.8, 8166.7, 8427.1,
			8666.7, 8885.4, 9093.8, 9291.7, 9479.2, 9656.3, 9833.3, 9989.6,
			10145.8, 10302.1, 10447.9, 10583.3, 10718.8, 10854.2, 10979.2,
			11104.2, 11218.8, 11343.8, 11447.9, 11562.5, 11666.7, 11770.8,
			11875.0, 11979.2, 12072.9, 12166.7, 12260.4, 12354.2, 12447.9,
			12541.7, 12625.0, 12718.8, 12802.1, 12885.4, 12968.8, 13052.1,
			13135.4, 13218.8, 13302.1, 13385.4, 13458.3, 13541.7, 13625.0,
			13697.9, 13781.3, 13854.2, 13937.5, 14010.4, 14093.8, 14166.7,
			14239.6, 14322.9, 14395.8, 14468.8, 14552.1, 14625.0, 14697.9,
			14781.3, 14854.2, 14927.1, 15000.0, 15083.3, 15156.3, 15229.2,
			15302.1, 15385.4, 15458.3, 15531.3, 15604.2, 15687.5, 15760.4,
			15833.3, 15916.7, 15989.6, 16062.5, 16135.4, 16218.8, 16291.7,
			16364.6, 16447.9, 16520.8, 16593.8, 16677.1, 16750.0, 16833.3,
			16906.3, 16979.2, 17062.5, 17083.3, 17156.3, 17229.2, 17312.5,
			17385.4, 17458.3, 17541.7, 17614.6, 17687.5, 17770.8, 17843.8,
			17916.7, 17989.6, 18072.9, 18145.8, 18218.8, 18291.7, 18364.6,
			18447.9, 18520.8, 18593.8, 18666.7, 18739.6, 18812.5, 18885.4,
			18958.3, 19031.3, 19104.2, 19177.1, 19250.0, 19312.5, 19385.4,
			19458.3, 19531.3, 19604.2, 19666.7, 19739.6, 19812.5, 19885.4,
			19947.9, 20020.8, 20093.8, 20156.3, 20229.2, 20302.1, 20364.6,
			20437.5, 20510.4, 20572.9, 20645.8, 20718.8, 20781.3, 20854.2,
			20916.7, 20989.6, 21052.1, 21125.0, 21197.9, 21260.4, 21333.3,
			21395.8, 21468.8, 21541.7, 21604.2, 21677.1, 21739.6, 21812.5,
			21885.4, 21947.9, 22020.8, 22093.8, 22156.3, 22229.2, 22302.1,
			22364.6, 22437.5, 22510.4, 22572.9, 22645.8, 22718.8, 22781.3,
			22854.2, 22927.1, 23000.0, 23062.5, 23135.4, 23208.3, 23281.3,
			23354.2, 23416.7, 23489.6, 23562.5, 23635.4, 23708.3, 23781.3,
			23843.8, 23916.7, 23989.6, 24062.5, 24135.4, 24208.3, 24281.3,
			24354.2, 24427.1, 24500.0, 24572.9, 24645.8, 24718.8, 24791.7,
			24864.6, 24937.5, 25010.4, 25083.3, 25156.3, 25229.2, 25302.1,
			25375.0, 25458.3, 25531.3, 25604.2, 25677.1, 25750.0, 25822.9,
			25906.3, 25979.2, 26052.1, 26125.0, 26197.9, 26270.8, 26354.2,
			26427.1, 26500.0, 26572.9, 26656.3, 26729.2, 26802.1, 26875.0,
			26958.3, 27031.3, 27104.2, 27177.1, 27260.4, 27333.3, 27406.3,
			27489.6, 27562.5, 27635.4, 27708.3, 27791.7, 27822.9 };
	private final double[] refM1 = new double[] { 4395.8, 4614.6, 4968.8,
			5354.2, 5750.0, 6104.2, 6437.5, 6739.6, 7020.8, 7281.3, 7520.8,
			7739.6, 7947.9, 8145.8, 8322.9, 8500.0, 8666.7, 8822.9, 8968.8,
			9114.6, 9260.4, 9385.4, 9520.8, 9645.8, 9760.4, 9875.0, 9989.6,
			10093.8, 10197.9, 10302.1, 10395.8, 10500.0, 10593.8, 10677.1,
			10770.8, 10854.2, 10947.9, 11031.3, 11114.6, 11187.5, 11270.8,
			11354.2, 11427.1, 11500.0, 11583.3, 11656.3, 11729.2, 11802.1,
			11875.0, 11947.9, 12020.8, 12093.8, 12156.3, 12229.2, 12302.1,
			12364.6, 12437.5, 12510.4, 12572.9, 12645.8, 12708.3, 12770.8,
			12843.8, 12906.3, 12979.2, 13041.7, 13114.6, 13177.1, 13239.6,
			13312.5, 13375.0, 13437.5, 13510.4, 13572.9, 13635.4, 13708.3,
			13770.8, 13833.3, 13895.8, 13968.8, 14031.3, 14093.8, 14166.7,
			14229.2, 14291.7, 14354.2, 14427.1, 14489.6, 14552.1, 14625.0,
			14687.5, 14750.0, 14822.9, 14885.4, 14947.9, 15020.8, 15083.3,
			15145.8, 15208.3, 15229.2, 15291.7, 15364.6, 15427.1, 15489.6,
			15552.1, 15625.0, 15687.5, 15750.0, 15812.5, 15885.4, 15947.9,
			16010.4, 16072.9, 16135.4, 16197.9, 16270.8, 16333.3, 16395.8,
			16458.3, 16520.8, 16583.3, 16645.8, 16708.3, 16760.4, 16822.9,
			16885.4, 16947.9, 17010.4, 17072.9, 17125.0, 17187.5, 17250.0,
			17312.5, 17364.6, 17427.1, 17489.6, 17541.7, 17604.2, 17666.7,
			17718.8, 17781.3, 17843.8, 17895.8, 17958.3, 18010.4, 18072.9,
			18125.0, 18187.5, 18250.0, 18302.1, 18364.6, 18416.7, 18479.2,
			18531.3, 18593.8, 18645.8, 18708.3, 18760.4, 18822.9, 18875.0,
			18937.5, 18989.6, 19052.1, 19104.2, 19166.7, 19218.8, 19281.3,
			19343.8, 19395.8, 19458.3, 19510.4, 19572.9, 19625.0, 19687.5,
			19739.6, 19802.1, 19854.2, 19916.7, 19979.2, 20031.3, 20093.8,
			20145.8, 20208.3, 20270.8, 20322.9, 20385.4, 20437.5, 20500.0,
			20562.5, 20614.6, 20677.1, 20729.2, 20791.7, 20854.2, 20906.3,
			20968.8, 21031.3, 21083.3, 21145.8, 21208.3, 21260.4, 21322.9,
			21385.4, 21447.9, 21500.0, 21562.5, 21625.0, 21677.1, 21739.6,
			21802.1, 21864.6, 21916.7, 21979.2, 22041.7, 22104.2, 22156.3,
			22218.8, 22281.3, 22343.8, 22406.3, 22458.3, 22520.8, 22583.3,
			22645.8, 22708.3, 22760.4, 22822.9, 22885.4, 22947.9, 23010.4,
			23072.9, 23125.0, 23187.5, 23250.0, 23312.5, 23375.0, 23437.5,
			23489.6, 23552.1, 23614.6, 23677.1, 23739.6, 23802.1, 23864.6,
			23916.7, 23979.2, 24041.7, 24104.2, 24114.6 };
	private final double[] ref0 = new double[] { 3312.5, 3500.0, 3781.3,
			4104.2, 4427.1, 4729.2, 5010.4, 5270.8, 5510.4, 5729.2, 5937.5,
			6135.4, 6312.5, 6479.2, 6635.4, 6791.7, 6927.1, 7072.9, 7197.9,
			7322.9, 7437.5, 7552.1, 7656.3, 7760.4, 7864.6, 7958.3, 8052.1,
			8135.4, 8218.8, 8302.1, 8385.4, 8458.3, 8541.7, 8614.6, 8687.5,
			8750.0, 8822.9, 8885.4, 8958.3, 9020.8, 9083.3, 9145.8, 9208.3,
			9270.8, 9333.3, 9385.4, 9447.9, 9500.0, 9562.5, 9614.6, 9677.1,
			9729.2, 9781.3, 9843.8, 9895.8, 9947.9, 10000.0, 10052.1, 10104.2,
			10156.3, 10208.3, 10260.4, 10312.5, 10364.6, 10416.7, 10468.8,
			10520.8, 10572.9, 10625.0, 10677.1, 10729.2, 10781.3, 10822.9,
			10875.0, 10927.1, 10979.2, 11031.3, 11072.9, 11125.0, 11177.1,
			11229.2, 11270.8, 11322.9, 11375.0, 11416.7, 11468.8, 11520.8,
			11572.9, 11614.6, 11666.7, 11718.8, 11760.4, 11812.5, 11864.6,
			11906.3, 11958.3, 12010.4, 12052.1, 12104.2, 12114.6, 12166.7,
			12218.8, 12260.4, 12312.5, 12354.2, 12406.3, 12458.3, 12500.0,
			12552.1, 12593.8, 12645.8, 12687.5, 12739.6, 12781.3, 12833.3,
			12875.0, 12916.7, 12968.8, 13010.4, 13062.5, 13104.2, 13145.8,
			13187.5, 13239.6, 13281.3, 13322.9, 13364.6, 13416.7, 13458.3,
			13500.0, 13541.7, 13583.3, 13625.0, 13666.7, 13708.3, 13760.4,
			13802.1, 13843.8, 13885.4, 13927.1, 13968.8, 14010.4, 14052.1,
			14093.8, 14135.4, 14177.1, 14208.3, 14250.0, 14291.7, 14333.3,
			14375.0, 14416.7, 14458.3, 14500.0, 14541.7, 14583.3, 14625.0,
			14666.7, 14708.3, 14750.0, 14781.3, 14822.9, 14864.6, 14906.3,
			14947.9, 14989.6, 15031.3, 15072.9, 15114.6, 15156.3, 15187.5,
			15229.2, 15270.8, 15312.5, 15354.2, 15395.8, 15437.5, 15479.2,
			15520.8, 15552.1, 15593.8, 15635.4, 15677.1, 15718.8, 15760.4,
			15802.1, 15843.8, 15885.4, 15927.1, 15958.3, 16000.0, 16041.7,
			16083.3, 16125.0, 16166.7, 16208.3, 16250.0, 16281.3, 16322.9,
			16364.6, 16406.3, 16447.9, 16489.6, 16531.3, 16562.5, 16604.2,
			16645.8, 16687.5, 16729.2, 16770.8, 16812.5, 16854.2, 16885.4,
			16927.1, 16968.8, 17010.4, 17052.1, 17093.8, 17135.4, 17177.1,
			17208.3, 17250.0, 17291.7, 17333.3, 17375.0, 17416.7, 17458.3,
			17489.6, 17531.3, 17572.9, 17614.6, 17656.3, 17697.9, 17739.6,
			17781.3, 17812.5, 17854.2, 17895.8, 17937.5, 17979.2, 18020.8,
			18052.1, 18093.8, 18135.4, 18177.1, 18218.8, 18260.4, 18291.7,
			18302.1 };
	private final double[] ref1 = new double[] { 2437.5, 2583.3, 2822.9,
			3083.3, 3354.2, 3614.6, 3843.8, 4062.5, 4270.8, 4458.3, 4635.4,
			4802.1, 4958.3, 5104.2, 5250.0, 5375.0, 5500.0, 5625.0, 5729.2,
			5833.3, 5937.5, 6031.3, 6125.0, 6208.3, 6291.7, 6375.0, 6447.9,
			6520.8, 6593.8, 6656.3, 6729.2, 6791.7, 6854.2, 6916.7, 6968.8,
			7031.3, 7083.3, 7135.4, 7187.5, 7239.6, 7291.7, 7343.8, 7395.8,
			7437.5, 7489.6, 7541.7, 7583.3, 7625.0, 7677.1, 7718.8, 7760.4,
			7812.5, 7854.2, 7895.8, 7937.5, 7979.2, 8020.8, 8062.5, 8104.2,
			8145.8, 8187.5, 8229.2, 8270.8, 8312.5, 8354.2, 8395.8, 8427.1,
			8468.8, 8510.4, 8552.1, 8593.8, 8625.0, 8666.7, 8708.3, 8739.6,
			8781.3, 8822.9, 8864.6, 8895.8, 8937.5, 8968.8, 9010.4, 9052.1,
			9083.3, 9125.0, 9156.3, 9197.9, 9239.6, 9270.8, 9312.5, 9343.8,
			9385.4, 9416.7, 9458.3, 9489.6, 9531.3, 9562.5, 9604.2, 9635.4,
			9645.8, 9687.5, 9718.8, 9760.4, 9791.7, 9822.9, 9864.6, 9895.8,
			9937.5, 9968.8, 10000.0, 10041.7, 10072.9, 10104.2, 10145.8,
			10177.1, 10208.3, 10239.6, 10281.3, 10312.5, 10343.8, 10375.0,
			10406.3, 10437.5, 10479.2, 10510.4, 10541.7, 10572.9, 10604.2,
			10635.4, 10666.7, 10697.9, 10729.2, 10760.4, 10791.7, 10822.9,
			10854.2, 10885.4, 10916.7, 10947.9, 10979.2, 11010.4, 11031.3,
			11062.5, 11093.8, 11125.0, 11156.3, 11187.5, 11218.8, 11250.0,
			11270.8, 11302.1, 11333.3, 11364.6, 11395.8, 11427.1, 11447.9,
			11479.2, 11510.4, 11541.7, 11572.9, 11604.2, 11625.0, 11656.3,
			11687.5, 11718.8, 11750.0, 11770.8, 11802.1, 11833.3, 11864.6,
			11895.8, 11927.1, 11947.9, 11979.2, 12010.4, 12041.7, 12062.5,
			12093.8, 12125.0, 12156.3, 12187.5, 12208.3, 12239.6, 12270.8,
			12302.1, 12322.9, 12354.2, 12385.4, 12416.7, 12437.5, 12468.8,
			12500.0, 12531.3, 12552.1, 12583.3, 12614.6, 12645.8, 12666.7,
			12697.9, 12729.2, 12750.0, 12781.3, 12812.5, 12833.3, 12864.6,
			12895.8, 12916.7, 12947.9, 12979.2, 13000.0, 13031.3, 13062.5,
			13083.3, 13114.6, 13145.8, 13166.7, 13197.9, 13229.2, 13250.0,
			13281.3, 13312.5, 13333.3, 13364.6, 13395.8, 13416.7, 13447.9,
			13468.8, 13500.0, 13531.3, 13552.1, 13583.3, 13614.6, 13635.4,
			13666.7, 13687.5, 13718.8, 13750.0, 13770.8, 13802.1, 13822.9,
			13854.2, 13885.4, 13906.3, 13937.5, 13958.3, 13989.6, 14010.4,
			14041.7, 14041.7 };
	private final double[] ref2 = new double[] { 2062.5, 2208.3, 2416.7,
			2656.3, 2906.3, 3135.4, 3343.8, 3552.1, 3739.6, 3916.7, 4083.3,
			4229.2, 4385.4, 4520.8, 4645.8, 4770.8, 4885.4, 5000.0, 5093.8,
			5197.9, 5291.7, 5375.0, 5458.3, 5541.7, 5614.6, 5687.5, 5760.4,
			5822.9, 5885.4, 5947.9, 6010.4, 6072.9, 6125.0, 6177.1, 6229.2,
			6281.3, 6333.3, 6385.4, 6437.5, 6479.2, 6520.8, 6572.9, 6614.6,
			6656.3, 6697.9, 6739.6, 6781.3, 6822.9, 6864.6, 6906.3, 6947.9,
			6989.6, 7031.3, 7062.5, 7104.2, 7145.8, 7177.1, 7218.8, 7250.0,
			7291.7, 7322.9, 7364.6, 7395.8, 7437.5, 7468.8, 7510.4, 7541.7,
			7583.3, 7614.6, 7645.8, 7687.5, 7718.8, 7750.0, 7781.3, 7822.9,
			7854.2, 7885.4, 7916.7, 7958.3, 7989.6, 8020.8, 8052.1, 8083.3,
			8125.0, 8156.3, 8187.5, 8218.8, 8250.0, 8281.3, 8312.5, 8343.8,
			8375.0, 8416.7, 8447.9, 8479.2, 8510.4, 8541.7, 8572.9, 8604.2,
			8614.6, 8645.8, 8677.1, 8708.3, 8739.6, 8770.8, 8802.1, 8822.9,
			8854.2, 8885.4, 8916.7, 8947.9, 8979.2, 9010.4, 9041.7, 9072.9,
			9093.8, 9125.0, 9156.3, 9187.5, 9208.3, 9239.6, 9270.8, 9302.1,
			9322.9, 9354.2, 9385.4, 9406.3, 9437.5, 9468.8, 9489.6, 9520.8,
			9541.7, 9572.9, 9593.8, 9625.0, 9656.3, 9677.1, 9708.3, 9729.2,
			9760.4, 9781.3, 9812.5, 9833.3, 9864.6, 9885.4, 9916.7, 9937.5,
			9958.3, 9989.6, 10010.4, 10041.7, 10062.5, 10093.8, 10114.6,
			10145.8, 10166.7, 10187.5, 10218.8, 10239.6, 10270.8, 10291.7,
			10312.5, 10343.8, 10364.6, 10395.8, 10416.7, 10447.9, 10468.8,
			10489.6, 10520.8, 10541.7, 10572.9, 10593.8, 10614.6, 10645.8,
			10666.7, 10697.9, 10718.8, 10739.6, 10770.8, 10791.7, 10812.5,
			10843.8, 10864.6, 10885.4, 10916.7, 10937.5, 10958.3, 10989.6,
			11010.4, 11031.3, 11062.5, 11083.3, 11104.2, 11135.4, 11156.3,
			11177.1, 11197.9, 11229.2, 11250.0, 11270.8, 11302.1, 11322.9,
			11343.8, 11364.6, 11395.8, 11416.7, 11437.5, 11458.3, 11489.6,
			11510.4, 11531.3, 11552.1, 11583.3, 11604.2, 11625.0, 11645.8,
			11666.7, 11697.9, 11718.8, 11739.6, 11760.4, 11781.3, 11812.5,
			11833.3, 11854.2, 11875.0, 11895.8, 11916.7, 11947.9, 11968.8,
			11989.6, 12010.4, 12031.3, 12062.5, 12083.3, 12104.2, 12125.0,
			12145.8, 12166.7, 12197.9, 12218.8, 12239.6, 12260.4, 12281.3,
			12302.1, 12322.9, 12343.8, 12343.8 };

	private static final double[] child1Moments = new double[] { 1147489200,
			1149044400, 1150686000, 1153105200, 1156129200, 1159326000,
			1165896000, 1171339200, 1176174000, 1182826800, 1196136000,
			1216782000, 1226894400, 1290830400 };

	private static final double[] child1Weights = new double[] { 4450, 4640,
			5245, 5795, 6525, 7255, 8220, 8860, 9330, 10390, 11300, 13600,
			14000, 16500 };

	public Intent execute(Context context) {
		String[] titles = new String[] { "2+", "1+", "0", "1-", "2-" };
		List<double[]> values = new ArrayList<double[]>();
		values.add(refM2);
		values.add(refM1);
		values.add(ref0);
		values.add(ref1);
		values.add(ref2);

		int[] lineColors = new int[] { Color.BLACK, Color.BLACK, Color.BLACK,
				Color.BLACK, Color.BLACK, Color.RED };
		int[] colorsBelow = new int[] { Color.WHITE, COLOR_IN_RANGE,
				COLOR_IN_RANGE, Color.WHITE, Color.WHITE };
		PointStyle[] styles = new PointStyle[] { PointStyle.POINT,
				PointStyle.POINT, PointStyle.POINT, PointStyle.POINT,
				PointStyle.POINT, PointStyle.CIRCLE };
		XYMultipleSeriesRenderer renderer = buildRenderer(lineColors, styles);
		int weeksToPlot = 52;
		setChartSettings(renderer, //
				"Weight", //
				"months", //
				"grams", //
				0, 13, //
				1800, 14000, //
				Color.GRAY, Color.LTGRAY);
		renderer.setXLabels(12);
		renderer.setYLabels(10);
		renderer.setChartTitleTextSize(20);
		renderer.setTextTypeface("sans_serif", Typeface.BOLD);
		renderer.setLabelsTextSize(14f);
		renderer.setAxisTitleTextSize(15);
		renderer.setLegendTextSize(15);
		renderer.setGridColor(Color.CYAN);
		renderer.setShowGrid(true);

		renderer.setZoomButtonsVisible(true);
		renderer.setZoomEnabled(true, true);

		int length = renderer.getSeriesRendererCount();
		for (int i = 0; i < length; i++) {
			XYSeriesRenderer seriesRenderer = (XYSeriesRenderer) renderer
					.getSeriesRendererAt(i);
			if (i < length - 1) {
				seriesRenderer.setFillBelowLine(true);
				seriesRenderer.setFillBelowLineColor(colorsBelow[i]);
				seriesRenderer.setLineWidth(2.5f);
				seriesRenderer.setDisplayChartValues(false);
			} else {
				seriesRenderer.setFillBelowLine(false);
				seriesRenderer.setLineWidth(3.5f);
				seriesRenderer.setDisplayChartValues(true);
				seriesRenderer.setChartValuesTextSize(10f);
			}
		}
		XYMultipleSeriesDataset refDataset = buildRefDataset(titles, values,
				weeksToPlot);
		XYSeries series = new XYSeries("Child 1");
		double dob = child1Moments[0]; // TODO: read from the child
		for (int i = 0; i < child1Moments.length; i++) {
			double moment = child1Moments[i] - dob;
			if (moment > refXs[weeksToPlot]) {
				break;
			}
			series.add(moment / SECONDS_PER_MONTH_AVG, child1Weights[i]);
		}
		refDataset.addSeries(series);
		return ChartFactory.getLineChartIntent(context, refDataset, renderer);
	}

	/**
	 * Sets a few of the series renderer settings.
	 * 
	 * @param renderer
	 *            the renderer to set the properties to
	 * @param title
	 *            the chart title
	 * @param xTitle
	 *            the title for the X axis
	 * @param yTitle
	 *            the title for the Y axis
	 * @param xMin
	 *            the minimum value on the X axis
	 * @param xMax
	 *            the maximum value on the X axis
	 * @param yMin
	 *            the minimum value on the Y axis
	 * @param yMax
	 *            the maximum value on the Y axis
	 * @param axesColor
	 *            the axes color
	 * @param labelsColor
	 *            the labels color
	 */
	protected void setChartSettings(XYMultipleSeriesRenderer renderer,
			String title, String xTitle, String yTitle, double xMin,
			double xMax, double yMin, double yMax, int axesColor,
			int labelsColor) {
		renderer.setChartTitle(title);
		renderer.setXTitle(xTitle);
		renderer.setYTitle(yTitle);
		renderer.setXAxisMin(xMin);
		renderer.setXAxisMax(xMax);
		renderer.setYAxisMin(yMin);
		renderer.setYAxisMax(yMax);
		renderer.setAxesColor(axesColor);
		renderer.setLabelsColor(labelsColor);
	}

	/**
	 * Builds a bar multiple series dataset using the provided values.
	 * 
	 * @param titles
	 *            the series titles
	 * @param values
	 *            the values
	 * @return the XY multiple bar dataset
	 */
	protected XYMultipleSeriesDataset buildRefDataset(String[] titles,
			List<double[]> values, int nrOfSamplesToUse) {
		XYMultipleSeriesDataset dataset = new XYMultipleSeriesDataset();
		int length = titles.length;
		for (int i = 0; i < length; i++) {
			XYSeries series = new XYSeries(titles[i]);
			double[] v = values.get(i);
			int seriesLength = nrOfSamplesToUse > v.length
					|| nrOfSamplesToUse < 1 ? v.length : nrOfSamplesToUse;
			for (int k = 0; k < seriesLength; k++) {
				series.add(refXs[k] / SECONDS_PER_MONTH_AVG, v[k]);
			}
			dataset.addSeries(series);
		}
		return dataset;
	}

	/**
	 * Builds an XY multiple series renderer.
	 * 
	 * @param colors
	 *            the series rendering colors
	 * @param styles
	 *            the series point styles
	 * @return the XY multiple series renderers
	 */
	protected XYMultipleSeriesRenderer buildRenderer(int[] colors,
			PointStyle[] styles) {
		XYMultipleSeriesRenderer renderer = new XYMultipleSeriesRenderer();
		setRenderer(renderer, colors, styles);
		return renderer;
	}

	protected void setRenderer(XYMultipleSeriesRenderer renderer, int[] colors,
			PointStyle[] styles) {
		renderer.setAxisTitleTextSize(16);
		renderer.setChartTitleTextSize(20);
		renderer.setLabelsTextSize(15);
		renderer.setLegendTextSize(15);
		renderer.setPointSize(5f);
		renderer.setMargins(new int[] { 20, 30, 15, 20 });
		int length = colors.length;
		for (int i = 0; i < length; i++) {
			XYSeriesRenderer r = new XYSeriesRenderer();
			r.setColor(colors[i]);
			r.setPointStyle(styles[i]);
			renderer.addSeriesRenderer(r);
		}
	}
}
